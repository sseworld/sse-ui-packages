{"version":3,"file":"mkdirp-native.js","sourceRoot":"","sources":["../../../src/mkdirp-native.ts"],"names":[],"mappings":";;;AAAA,+BAA8B;AAC9B,iDAAuD;AACvD,yDAAmE;AACnE,+CAAsD;AAE/C,MAAM,gBAAgB,GAAG,CAC9B,IAAY,EACZ,OAAuB,EACI,EAAE;IAC7B,MAAM,IAAI,GAAG,IAAA,qBAAO,EAAC,OAAO,CAAC,CAAA;IAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;IACrB,MAAM,MAAM,GAAG,IAAA,cAAO,EAAC,IAAI,CAAC,CAAA;IAC5B,IAAI,MAAM,KAAK,IAAI,EAAE;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KAClC;IAED,MAAM,IAAI,GAAG,IAAA,2BAAY,EAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IACrC,IAAI;QACF,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QAC1B,OAAO,IAAI,CAAA;KACZ;IAAC,OAAO,EAAE,EAAE;QACX,MAAM,GAAG,GAAG,EAA2B,CAAA;QACvC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;YAChC,OAAO,IAAA,mCAAgB,EAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SACpC;aAAM;YACL,MAAM,EAAE,CAAA;SACT;KACF;AACH,CAAC,CAAA;AAvBY,QAAA,gBAAgB,oBAuB5B;AAEY,QAAA,YAAY,GAAG,MAAM,CAAC,MAAM,CACvC,KAAK,EACH,IAAY,EACZ,OAAuB,EACa,EAAE;IACtC,MAAM,IAAI,GAAG,EAAE,GAAG,IAAA,qBAAO,EAAC,OAAO,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAA;IACrD,MAAM,MAAM,GAAG,IAAA,cAAO,EAAC,IAAI,CAAC,CAAA;IAC5B,IAAI,MAAM,KAAK,IAAI,EAAE;QACnB,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KACzC;IAED,OAAO,IAAA,uBAAQ,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAyB,EAAE,EAAE,CAC7D,IAAI;SACD,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;SACtB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC;SACpB,KAAK,CAAC,EAAE,CAAC,EAAE;QACV,MAAM,GAAG,GAAG,EAA2B,CAAA;QACvC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;YAChC,OAAO,IAAA,+BAAY,EAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAChC;aAAM;YACL,MAAM,EAAE,CAAA;SACT;IACH,CAAC,CAAC,CACL,CAAA;AACH,CAAC,EACD,EAAE,IAAI,EAAE,wBAAgB,EAAE,CAC3B,CAAA","sourcesContent":["import { dirname } from 'path'\r\nimport { findMade, findMadeSync } from './find-made.js'\r\nimport { mkdirpManual, mkdirpManualSync } from './mkdirp-manual.js'\r\nimport { MkdirpOptions, optsArg } from './opts-arg.js'\r\n\r\nexport const mkdirpNativeSync = (\r\n  path: string,\r\n  options?: MkdirpOptions\r\n): string | void | undefined => {\r\n  const opts = optsArg(options)\r\n  opts.recursive = true\r\n  const parent = dirname(path)\r\n  if (parent === path) {\r\n    return opts.mkdirSync(path, opts)\r\n  }\r\n\r\n  const made = findMadeSync(opts, path)\r\n  try {\r\n    opts.mkdirSync(path, opts)\r\n    return made\r\n  } catch (er) {\r\n    const fer = er as NodeJS.ErrnoException\r\n    if (fer && fer.code === 'ENOENT') {\r\n      return mkdirpManualSync(path, opts)\r\n    } else {\r\n      throw er\r\n    }\r\n  }\r\n}\r\n\r\nexport const mkdirpNative = Object.assign(\r\n  async (\r\n    path: string,\r\n    options?: MkdirpOptions\r\n  ): Promise<string | void | undefined> => {\r\n    const opts = { ...optsArg(options), recursive: true }\r\n    const parent = dirname(path)\r\n    if (parent === path) {\r\n      return await opts.mkdirAsync(path, opts)\r\n    }\r\n\r\n    return findMade(opts, path).then((made?: string | undefined) =>\r\n      opts\r\n        .mkdirAsync(path, opts)\r\n        .then(m => made || m)\r\n        .catch(er => {\r\n          const fer = er as NodeJS.ErrnoException\r\n          if (fer && fer.code === 'ENOENT') {\r\n            return mkdirpManual(path, opts)\r\n          } else {\r\n            throw er\r\n          }\r\n        })\r\n    )\r\n  },\r\n  { sync: mkdirpNativeSync }\r\n)\r\n"]}