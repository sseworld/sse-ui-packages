{"version":3,"file":"find-made.js","sourceRoot":"","sources":["../../../src/find-made.ts"],"names":[],"mappings":";;;AAAA,+BAA8B;AAGvB,MAAM,QAAQ,GAAG,KAAK,EAC3B,IAA2B,EAC3B,MAAc,EACd,IAAa,EACgB,EAAE;IAC/B,+DAA+D;IAC/D,IAAI,IAAI,KAAK,MAAM,EAAE;QACnB,OAAM;KACP;IAED,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAChC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,kBAAkB;IAC/D,AAD6C,kBAAkB;IAC/D,EAAE,CAAC,EAAE;QACH,MAAM,GAAG,GAAG,EAA2B,CAAA;QACvC,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ;YACjC,CAAC,CAAC,IAAA,gBAAQ,EAAC,IAAI,EAAE,IAAA,cAAO,EAAC,MAAM,CAAC,EAAE,MAAM,CAAC;YACzC,CAAC,CAAC,SAAS,CAAA;IACf,CAAC,CACF,CAAA;AACH,CAAC,CAAA;AAnBY,QAAA,QAAQ,YAmBpB;AAEM,MAAM,YAAY,GAAG,CAC1B,IAA2B,EAC3B,MAAc,EACd,IAAa,EACO,EAAE;IACtB,IAAI,IAAI,KAAK,MAAM,EAAE;QACnB,OAAO,SAAS,CAAA;KACjB;IAED,IAAI;QACF,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAA;KAC9D;IAAC,OAAO,EAAE,EAAE;QACX,MAAM,GAAG,GAAG,EAA2B,CAAA;QACvC,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ;YACjC,CAAC,CAAC,IAAA,oBAAY,EAAC,IAAI,EAAE,IAAA,cAAO,EAAC,MAAM,CAAC,EAAE,MAAM,CAAC;YAC7C,CAAC,CAAC,SAAS,CAAA;KACd;AACH,CAAC,CAAA;AAjBY,QAAA,YAAY,gBAiBxB","sourcesContent":["import { dirname } from 'path'\r\nimport { MkdirpOptionsResolved } from './opts-arg.js'\r\n\r\nexport const findMade = async (\r\n  opts: MkdirpOptionsResolved,\r\n  parent: string,\r\n  path?: string\r\n): Promise<undefined | string> => {\r\n  // we never want the 'made' return value to be a root directory\r\n  if (path === parent) {\r\n    return\r\n  }\r\n\r\n  return opts.statAsync(parent).then(\r\n    st => (st.isDirectory() ? path : undefined), // will fail later\r\n    er => {\r\n      const fer = er as NodeJS.ErrnoException\r\n      return fer && fer.code === 'ENOENT'\r\n        ? findMade(opts, dirname(parent), parent)\r\n        : undefined\r\n    }\r\n  )\r\n}\r\n\r\nexport const findMadeSync = (\r\n  opts: MkdirpOptionsResolved,\r\n  parent: string,\r\n  path?: string\r\n): undefined | string => {\r\n  if (path === parent) {\r\n    return undefined\r\n  }\r\n\r\n  try {\r\n    return opts.statSync(parent).isDirectory() ? path : undefined\r\n  } catch (er) {\r\n    const fer = er as NodeJS.ErrnoException\r\n    return fer && fer.code === 'ENOENT'\r\n      ? findMadeSync(opts, dirname(parent), parent)\r\n      : undefined\r\n  }\r\n}\r\n"]}